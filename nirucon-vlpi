#!/bin/bash

# Nirucon-VLPI: Post Install script for Void Linux (glibc)
# Author: Nicklas Rudolfsson
# Version: 2024-08-03
# License: Feel free to use and modify, donate if you want :) https://www.paypal.com/paypalme/nicklasrudolfsson
# Disclaimer: I do not have any responsibility at all for this script and changes on your system!

# Welcome message
clear
echo -e "\e[1;34mWelcome to the Nirucon-VLPI Post Install script for Void Linux (glibc)\e[0m"
echo -e "\e[1;31mDisclaimer: Use at your own risk. The author assumes no responsibility for any changes made to your system.\e[0m"
echo "--------------------------------------------------------------------------"

# Function: Check for internet connection
check_internet() {
    echo "Checking for internet connection..."
    if ping -q -c 1 -W 1 google.com >/dev/null; then
        echo "Internet connection is available."
    else
        echo "No internet connection. Exiting script."
        exit 1
    fi
}

# Function: Update and optimize the system
update_system() {
    echo "Updating and optimizing the system..."
    sudo xbps-install -Syu xbps --yes
    sudo xbps-install -Syu --yes
}

# Function: Add additional repositories
add_repos() {
    echo "Adding additional repositories..."
    sudo xbps-install -S void-repo-nonfree void-repo-multilib void-repo-multilib-nonfree --yes
}

# Function: Install core packages
install_core_packages() {
    echo "Installing core packages..."
    sudo xbps-install -S base-devel libX11-devel libXft-devel libXinerama-devel freetype-devel fontconfig-devel imlib2 --yes
    sudo xbps-install -S xorg-minimal xorg-video-drivers xorg-input-drivers xorg-server xorg-apps --yes
    sudo xbps-install -S pipewire pipewire-devel alsa-pipewire wireplumber pipewire-pulse alsa-utils --yes
    sudo xbps-install -S acpi acpid tlp powertop --yes
    sudo xbps-install -S NetworkManager network-manager-applet --yes
    sudo xbps-install -S font-awesome nerd-fonts --yes
}

# Function: Enable necessary services
enable_services() {
    echo "Enabling necessary services..."
    sudo ln -s /etc/sv/NetworkManager /var/service
    sudo ln -s /etc/sv/acpid /var/service
}

# Function: Install nirucon-suckless and configurations
setup_suckless() {
    echo "Installing nirucon-suckless and configurations..."

    # Create necessary directories
    mkdir -p ~/Git ~/.config/suckless ~/.dwm ~/.config/dunst
    git clone https://github.com/nirucon/nirucon-suckless ~/Git/nirucon-suckless

    # Clone and copy repositories
    declare -a repos=("nirubar-dwm-void" "dunstrc" "srplay-dmenu" "havamal")
    for repo in "${repos[@]}"; do
        git clone https://github.com/nirucon/$repo ~/Git/$repo
        cp -rf ~/Git/$repo ~/.config/suckless/
    done

    # Copy configurations and scripts
    cp -rf ~/Git/nirucon-suckless/* ~/.config/suckless/
    cp -f ~/Git/nirucon-suckless/.xinitrc ~/
    cp -f ~/Git/nirucon-suckless/autostart.sh ~/.dwm
    cp -f ~/Git/nirucon-suckless/.bashrc ~/
    cp -f ~/Git/nirucon-suckless/.bash_aliases_void ~/
    cp -rf ~/Git/nirucon-suckless/nirucon-wallpapers ~/Pictures/
    sudo cp -f ~/Git/nirucon-suckless/issue /etc/
    chmod +x ~/.dwm/autostart.sh ~/.config/suckless/nirubar-dwm-void/nirubar-dwm-void ~/.config/nirucon-greeter/greeter

    # Insert nirubar-dwm in .xinitrc
    line_to_insert="~/.config/suckless/nirubar-dwm-void/nirubar-dwm-void &"
    comment_line="# Start nirubar-dwm-*"
    if [[ -f ~/.xinitrc ]]; then
        sed -i "/$comment_line/a $line_to_insert" ~/.xinitrc
        echo "Line inserted successfully."
    else
        echo "~/.xinitrc not found. Please ensure you have the file in your home directory."
    fi
}

# Function: Install Havamal script
install_havamal() {
    echo "Installing Havamal script..."
    git clone https://github.com/nirucon/havamal
    mkdir -p ~/.config/havamal
    mv havamal/havamal ~/.config/havamal/
    chmod +x ~/.config/havamal/havamal
}

# Function: Install SRPlay Dmenu script
install_srplay_dmenu() {
    echo "Installing SRPlay Dmenu script..."
    git clone https://github.com/nirucon/srplay-dmenu
    sudo mv -f srplay-dmenu/srplay-dmenu /usr/local/bin/
    sudo chmod +x /usr/local/bin/srplay-dmenu
}

# Function: Install Nirucon Grub Theme
install_grub_theme() {
    read -p "Do you want to install a custom grub theme - nirucon-death? [Y/n]: " grub_response
    grub_response=${grub_response,,}
    if [[ "$grub_response" =~ ^(yes|y| ) ]] || [[ -z "$grub_response" ]]; then
        echo "Installing custom grub theme..."
        git clone https://github.com/nirucon/nirucon-death-grubtheme ~/Git/nirucon-death-grubtheme
        sudo mkdir -p /boot/grub/themes
        sudo cp -r ~/Git/nirucon-death-grubtheme/nirucon-death /boot/grub/themes/nirucon-death
        sudo sed -i 's|^#GRUB_THEME=.*|GRUB_THEME="/boot/grub/themes/nirucon-death/theme.txt"|' /etc/default/grub
        sudo grub-mkconfig -o /boot/grub/grub.cfg
        echo "Custom grub theme installed."
    else
        echo "Skipping custom grub theme installation."
    fi
}

# Function: Install Nirucon Dunst Configuration
install_dunst_config() {
    echo "Installing Nirucon Dunst Configuration..."
    git clone https://github.com/nirucon/dunstrc
    mkdir -p ~/.config/dunst
    mv dunstrc/dunstrc ~/.config/dunst/
}

# Function: Install additional packages
install_additional_packages() {
    echo "Installing additional packages..."
    sudo xbps-install -S fastfetch playerctl pcmanfm arandr nitrogen picom openssh cmus scrot gnupg pass brightnessctl mpv dunst unzip nano xarchiver xclip htop curl libnotify jq bc rofi lxappearance --yes
}

# Function: Install Web Browsers
install_web_browsers() {
    read -p "Do you want to install web browsers (Firefox, Surf)? [Y/n]: " browser_response
    browser_response=${browser_response,,}
    if [[ "$browser_response" =~ ^(yes|y| ) ]] || [[ -z "$browser_response" ]]; then
        sudo xbps-install -S firefox surf --yes
    fi
}

# Function: Install Rofi theme
install_rofi_theme() {
    echo "Installing and setting the Rofi custom theme..."
    sudo mkdir -p /usr/share/rofi/themes
    mkdir -p ~/.config/rofi

    wget -O /tmp/nirucon.rasi https://raw.githubusercontent.com/nirucon/nirucon-rofi/master/nirucon.rasi
    sudo mv -f /tmp/nirucon.rasi /usr/share/rofi/themes/

    wget -O /tmp/config.rasi https://raw.githubusercontent.com/nirucon/nirucon-rofi/master/config.rasi
    mv -f /tmp/config.rasi ~/.config/rofi/config.rasi
}

# Function: Clean up
clean_up() {
    echo "Cleaning up..."
    rm -rf ~/Git/nirucon-suckless ~/Git/nirubar-dwm-void ~/Git/havamal ~/Git/srplay-dmenu ~/Git/nirucon-death-grubtheme ~/Git/dunstrc
}

# Function: Reboot the system
reboot_system() {
    echo -e "\e[1;32mInstallation completed successfully!\e[0m"
    read -p "Do you want to reboot now? [Y/n]: " reboot_response
    reboot_response=${reboot_response,,}
    if [[ "$reboot_response" =~ ^(yes|y| ) ]] || [[ -z "$reboot_response" ]]; then
        echo "Rebooting now..."
        sudo reboot
    else
        echo "Warning: The system needs to be rebooted to work properly."
        exit 0
    fi
}

# Main script execution
check_internet
update_system
add_repos
install_core_packages
enable_services
setup_suckless
install_havamal
install_srplay_dmenu
install_grub_theme
install_dunst_config
install_additional_packages
install_web_browsers
install_rofi_theme
clean_up
reboot_system
